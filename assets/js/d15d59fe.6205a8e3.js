"use strict";(self.webpackChunk_clean_stack_source=self.webpackChunk_clean_stack_source||[]).push([[7444],{6497:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"platform-features/observability/otel-clean-stack","title":"OpenTelemetry Implementation Guide","description":"This guide covers the practical implementation of observability in Clean Stack using OpenTelemetry.","source":"@site/docs/platform-features/observability/otel-clean-stack.md","sourceDirName":"platform-features/observability","slug":"/platform-features/observability/otel-clean-stack","permalink":"/docs/platform-features/observability/otel-clean-stack","draft":false,"unlisted":false,"editUrl":"https://github.com/ersanyamarya/clean-stack/tree/main/apps/clean-docs/docs/platform-features/observability/otel-clean-stack.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"OpenTelemetry Setup"},"sidebar":"tutorialSidebar","previous":{"title":"Understanding OpenTelemetry","permalink":"/docs/platform-features/observability/what-is-otel"},"next":{"title":"Grafana Integration","permalink":"/docs/platform-features/observability/grafana-stack"}}');var i=t(4848),s=t(8453);const a={sidebar_label:"OpenTelemetry Setup"},l="OpenTelemetry Implementation Guide",c={},o=[{value:"Quick Setup",id:"quick-setup",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Basic Configuration",id:"basic-configuration",level:3},{value:"Advanced Options",id:"advanced-options",level:3},{value:"Tracing",id:"tracing",level:2},{value:"Request Tracing",id:"request-tracing",level:3},{value:"Automatic Instrumentation",id:"automatic-instrumentation",level:3},{value:"Metrics",id:"metrics",level:2},{value:"Custom Metrics",id:"custom-metrics",level:3},{value:"Default Metrics",id:"default-metrics",level:3},{value:"Structured Logging",id:"structured-logging",level:2},{value:"Basic Logging",id:"basic-logging",level:3},{value:"Context Enrichment",id:"context-enrichment",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"opentelemetry-implementation-guide",children:"OpenTelemetry Implementation Guide"})}),"\n",(0,i.jsx)(n.p,{children:"This guide covers the practical implementation of observability in Clean Stack using OpenTelemetry."}),"\n",(0,i.jsx)(n.h2,{id:"quick-setup",children:"Quick Setup"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { initTelemetry } from '@clean-stack/backend-telemetry';\n\nawait initTelemetry('user-service', {\n  tracing: true,\n  metrics: true,\n  logging: true\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,i.jsx)(n.h3,{id:"basic-configuration",children:"Basic Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface TelemetryConfig {\n  serviceName: string;\n  environment?: 'development' | 'staging' | 'production';\n  version?: string;\n  tracing?: boolean | TracingConfig;\n  metrics?: boolean | MetricsConfig;\n  logging?: boolean | LoggingConfig;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"advanced-options",children:"Advanced Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface AdvancedConfig extends TelemetryConfig {\n  exporters?: {\n    tracing?: TracingExporter[];\n    metrics?: MetricsExporter[];\n    logging?: LoggingExporter[];\n  };\n  samplers?: {\n    tracing?: TracingSamplerConfig;\n  };\n  propagators?: PropagatorConfig[];\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"tracing",children:"Tracing"}),"\n",(0,i.jsx)(n.h3,{id:"request-tracing",children:"Request Tracing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { trace } from '@clean-stack/backend-telemetry';\n\n// Create a span\nconst span = trace.getTracer('my-service').startSpan('operation-name');\n\ntry {\n  // Add attributes\n  span.setAttribute('user.id', userId);\n  \n  // Add events\n  span.addEvent('cache.miss');\n  \n  // Your business logic\n  await doSomething();\n} catch (error) {\n  // Record errors\n  span.recordException(error);\n  throw error;\n} finally {\n  span.end();\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"automatic-instrumentation",children:"Automatic Instrumentation"}),"\n",(0,i.jsx)(n.p,{children:"Clean Stack automatically instruments:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"HTTP/HTTPS requests"}),"\n",(0,i.jsx)(n.li,{children:"gRPC calls"}),"\n",(0,i.jsx)(n.li,{children:"Database operations"}),"\n",(0,i.jsx)(n.li,{children:"Cache operations"}),"\n",(0,i.jsx)(n.li,{children:"Queue operations"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"metrics",children:"Metrics"}),"\n",(0,i.jsx)(n.h3,{id:"custom-metrics",children:"Custom Metrics"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { metrics } from '@clean-stack/backend-telemetry';\n\n// Create counter\nconst requestCounter = metrics.getMetric('requests_total', {\n  description: 'Total number of requests',\n  unit: '1',\n  valueType: ValueType.INT64\n});\n\n// Increment counter\nrequestCounter.add(1, {\n  endpoint: '/users',\n  method: 'GET'\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"default-metrics",children:"Default Metrics"}),"\n",(0,i.jsx)(n.p,{children:"Automatically collected metrics include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CPU usage"}),"\n",(0,i.jsx)(n.li,{children:"Memory usage"}),"\n",(0,i.jsx)(n.li,{children:"Event loop lag"}),"\n",(0,i.jsx)(n.li,{children:"HTTP request duration"}),"\n",(0,i.jsx)(n.li,{children:"gRPC call latency"}),"\n",(0,i.jsx)(n.li,{children:"Cache hit/miss ratio"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"structured-logging",children:"Structured Logging"}),"\n",(0,i.jsx)(n.h3,{id:"basic-logging",children:"Basic Logging"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { logger } from '@clean-stack/backend-telemetry';\n\nlogger.info('User action completed', {\n  userId: '123',\n  action: 'login',\n  duration: 150\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"context-enrichment",children:"Context Enrichment"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { enrichContext } from '@clean-stack/backend-telemetry';\n\n// Add context to all logs in this scope\nenrichContext({\n  requestId: '456',\n  tenant: 'acme-corp'\n}, async () => {\n  logger.info('Processing request');\n  await processRequest();\n  logger.info('Request completed');\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Span Management"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// DO: Use the withSpan helper\nawait withSpan('operation-name', async (span) => {\n  // Your code here\n});\n\n// DON'T: Forget to end spans\nconst span = tracer.startSpan('operation');\n// ... code without ending span\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// DO: Record exceptions with context\ntry {\n  await riskyOperation();\n} catch (error) {\n  span.recordException(error, {\n    attributes: {\n      'error.type': error.name,\n      'error.message': error.message\n    }\n  });\n  throw error;\n}\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Performance Impact"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// DO: Use sampling for high-throughput operations\nconst config: TracingSamplerConfig = {\n  type: 'probabilistic',\n  ratio: 0.1 // Sample 10% of traces\n};\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Missing Traces"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check exporter configuration"}),"\n",(0,i.jsx)(n.li,{children:"Verify sampling settings"}),"\n",(0,i.jsx)(n.li,{children:"Ensure spans are being ended"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"High Cardinality"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Limit number of unique tag values"}),"\n",(0,i.jsx)(n.li,{children:"Use enumerated values where possible"}),"\n",(0,i.jsx)(n.li,{children:"Configure appropriate sampling"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Performance Impact"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Adjust sampling rates"}),"\n",(0,i.jsx)(n.li,{children:"Optimize attribute collection"}),"\n",(0,i.jsx)(n.li,{children:"Monitor telemetry overhead"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"./grafana-stack",children:"Grafana Integration"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"./exporters",children:"Custom Exporters Setup"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"./advanced",children:"Advanced Configurations"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(6540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);