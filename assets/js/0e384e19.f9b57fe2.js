"use strict";(self.webpackChunk_clean_stack_source=self.webpackChunk_clean_stack_source||[]).push([[3976],{7910:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"intro","title":"Introduction to Clean Stack","description":"Clean Stack is a TypeScript-first development platform designed to help teams build production-ready microservices with confidence. By combining battle-tested patterns with developer-friendly conventions, it eliminates common technical hurdles while maintaining flexibility for diverse business needs.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/ersanyamarya/clean-stack/tree/main/apps/clean-docs/docs/intro.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","next":{"title":"Getting Started","permalink":"/docs/category/getting-started"}}');var r=n(4848),s=n(8453);const l={},c="Introduction to Clean Stack",a={},d=[{value:"Our Vision",id:"our-vision",level:2},{value:"Key Benefits",id:"key-benefits",level:2},{value:"1. Developer Productivity",id:"1-developer-productivity",level:3},{value:"2. Production Ready",id:"2-production-ready",level:3},{value:"3. Scalable Architecture",id:"3-scalable-architecture",level:3},{value:"4. Maintainable Codebase",id:"4-maintainable-codebase",level:3},{value:"Core Features",id:"core-features",level:2},{value:"Who Should Use Clean Stack?",id:"who-should-use-clean-stack",level:2},{value:"Perfect For",id:"perfect-for",level:3},{value:"Use Cases",id:"use-cases",level:3},{value:"Quick Example",id:"quick-example",level:2},{value:"Next Steps",id:"next-steps",level:2}];function o(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"introduction-to-clean-stack",children:"Introduction to Clean Stack"})}),"\n",(0,r.jsx)(i.p,{children:"Clean Stack is a TypeScript-first development platform designed to help teams build production-ready microservices with confidence. By combining battle-tested patterns with developer-friendly conventions, it eliminates common technical hurdles while maintaining flexibility for diverse business needs."}),"\n",(0,r.jsx)(i.h2,{id:"our-vision",children:"Our Vision"}),"\n",(0,r.jsx)(i.p,{children:"We believe that modern software development shouldn't be bogged down by:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Complex infrastructure setup"}),"\n",(0,r.jsx)(i.li,{children:"Inconsistent architectural patterns"}),"\n",(0,r.jsx)(i.li,{children:"Poor observability and debugging"}),"\n",(0,r.jsx)(i.li,{children:"Repetitive boilerplate code"}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Clean Stack solves these challenges through a carefully curated set of tools and practices."}),"\n",(0,r.jsx)(i.h2,{id:"key-benefits",children:"Key Benefits"}),"\n",(0,r.jsx)(i.h3,{id:"1-developer-productivity",children:"1. Developer Productivity"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Zero-config defaults that just work"}),"\n",(0,r.jsx)(i.li,{children:"Comprehensive type safety"}),"\n",(0,r.jsx)(i.li,{children:"Built-in best practices"}),"\n",(0,r.jsx)(i.li,{children:"Rich development tooling"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"2-production-ready",children:"2. Production Ready"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Built-in observability"}),"\n",(0,r.jsx)(i.li,{children:"Robust error handling"}),"\n",(0,r.jsx)(i.li,{children:"Performance optimization"}),"\n",(0,r.jsx)(i.li,{children:"Security best practices"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"3-scalable-architecture",children:"3. Scalable Architecture"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Microservices-first design"}),"\n",(0,r.jsx)(i.li,{children:"Event-driven capabilities"}),"\n",(0,r.jsx)(i.li,{children:"Horizontal scaling"}),"\n",(0,r.jsx)(i.li,{children:"Cloud-native patterns"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"4-maintainable-codebase",children:"4. Maintainable Codebase"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Clean architecture principles"}),"\n",(0,r.jsx)(i.li,{children:"Domain-driven design"}),"\n",(0,r.jsx)(i.li,{children:"Consistent patterns"}),"\n",(0,r.jsx)(i.li,{children:"Comprehensive documentation"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"core-features",children:"Core Features"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Feature"}),(0,r.jsx)(i.th,{children:"Description"}),(0,r.jsx)(i.th,{children:"Learn More"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Monorepo"}),(0,r.jsx)(i.td,{children:"Unified codebase management with NX"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"./getting-started/project-structure",children:"Project Structure"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"TypeScript"}),(0,r.jsx)(i.td,{children:"End-to-end type safety"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"./architecture/philosophy",children:"Architecture"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"gRPC"}),(0,r.jsx)(i.td,{children:"High-performance service communication"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"./architecture/philosophy",children:"Architecture"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"OpenTelemetry"}),(0,r.jsx)(i.td,{children:"Complete observability stack"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"./platform-features",children:"Platform Features"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Caching"}),(0,r.jsx)(i.td,{children:"Multi-level caching with Redis"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"./platform-features/caching",children:"Caching Guide"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Rate Limiting"}),(0,r.jsx)(i.td,{children:"Distributed rate limiting"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"./platform-features/rate-limiter",children:"Rate Limiting"})})]})]})]}),"\n",(0,r.jsx)(i.h2,{id:"who-should-use-clean-stack",children:"Who Should Use Clean Stack?"}),"\n",(0,r.jsx)(i.h3,{id:"perfect-for",children:"Perfect For"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Startups building scalable applications"}),"\n",(0,r.jsx)(i.li,{children:"Teams adopting microservices"}),"\n",(0,r.jsx)(i.li,{children:"Projects requiring high reliability"}),"\n",(0,r.jsx)(i.li,{children:"Performance-critical applications"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"use-cases",children:"Use Cases"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"API Services"}),"\n",(0,r.jsx)(i.li,{children:"Web Applications"}),"\n",(0,r.jsx)(i.li,{children:"Data Processing"}),"\n",(0,r.jsx)(i.li,{children:"Real-time Systems"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"quick-example",children:"Quick Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-typescript",children:"import { createKoaServer } from '@clean-stack/koa-server-essentials';\n\n// Create a production-ready server with sensible defaults\nconst server = await createKoaServer({\n  name: 'user-service',\n  port: 3000,\n  // Features auto-configured:\n  // - Observability\n  // - Caching\n  // - Rate Limiting\n  // - Error Handling\n});\n\nserver.start();\n"})}),"\n",(0,r.jsx)(i.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(i.p,{children:["\ud83d\udcda ",(0,r.jsx)(i.strong,{children:"Learn"})]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"./getting-started/quick-start",children:"Quick Start Guide"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"./getting-started/installation",children:"Installation Guide"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"./architecture/philosophy",children:"Architecture Philosophy"})}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["\ud83d\udee0\ufe0f ",(0,r.jsx)(i.strong,{children:"Build"})]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"./getting-started/project-structure",children:"Project Structure"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"./platform-features",children:"Platform Features"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"./framework/components",children:"Framework Components"})}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>c});var t=n(6540);const r={},s=t.createContext(r);function l(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);