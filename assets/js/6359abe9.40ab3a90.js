"use strict";(self.webpackChunk_clean_stack_source=self.webpackChunk_clean_stack_source||[]).push([[4987],{739:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"platform-features/observability/advanced","title":"Advanced Configuration","description":"This guide covers advanced configuration options for OpenTelemetry in Clean Stack.","source":"@site/docs/platform-features/observability/advanced.md","sourceDirName":"platform-features/observability","slug":"/platform-features/observability/advanced","permalink":"/docs/platform-features/observability/advanced","draft":false,"unlisted":false,"editUrl":"https://github.com/ersanyamarya/clean-stack/tree/main/apps/clean-docs/docs/platform-features/observability/advanced.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"OpenTelemetry Exporters","permalink":"/docs/platform-features/observability/exporters"},"next":{"title":"Caching","permalink":"/docs/platform-features/caching"}}');var o=n(4848),a=n(8453);const s={sidebar_position:4},i="Advanced Configuration",c={},l=[{value:"Custom Sampling",id:"custom-sampling",level:2},{value:"Batch Processor Configuration",id:"batch-processor-configuration",level:2},{value:"Custom Attributes",id:"custom-attributes",level:2},{value:"Manual Instrumentation",id:"manual-instrumentation",level:2},{value:"Context Propagation",id:"context-propagation",level:2},{value:"Custom Metrics",id:"custom-metrics",level:2},{value:"Error Handling",id:"error-handling",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"advanced-configuration",children:"Advanced Configuration"})}),"\n",(0,o.jsx)(r.p,{children:"This guide covers advanced configuration options for OpenTelemetry in Clean Stack."}),"\n",(0,o.jsx)(r.h2,{id:"custom-sampling",children:"Custom Sampling"}),"\n",(0,o.jsx)(r.p,{children:"Clean Stack supports custom sampling strategies for traces:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"const sampler = new ParentBasedSampler({\n  root: new TraceIdRatioBased(0.1), // Sample 10% of traces\n});\n\nsdk.setGlobalTracerProvider(\n  new NodeTracerProvider({\n    sampler,\n    resource: createResource(),\n  })\n);\n"})}),"\n",(0,o.jsx)(r.h2,{id:"batch-processor-configuration",children:"Batch Processor Configuration"}),"\n",(0,o.jsx)(r.p,{children:"Customize the batch processor settings for better performance:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"const spanProcessor = new BatchSpanProcessor(exporter, {\n  maxQueueSize: 2048,\n  scheduledDelayMillis: 5000,\n  maxExportBatchSize: 512,\n});\n"})}),"\n",(0,o.jsx)(r.h2,{id:"custom-attributes",children:"Custom Attributes"}),"\n",(0,o.jsx)(r.p,{children:"Add custom attributes to all spans and metrics:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"const resource = Resource.default().merge(\n  new Resource({\n    'service.name': 'my-service',\n    'deployment.environment': process.env.NODE_ENV,\n    'custom.attribute': 'value',\n  })\n);\n"})}),"\n",(0,o.jsx)(r.h2,{id:"manual-instrumentation",children:"Manual Instrumentation"}),"\n",(0,o.jsx)(r.p,{children:"For custom business logic:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"const tracer = trace.getTracer('my-custom-tracer');\n\ntracer.startActiveSpan('operation-name', span => {\n  span.setAttribute('custom.attribute', 'value');\n  try {\n    // Your code here\n  } finally {\n    span.end();\n  }\n});\n"})}),"\n",(0,o.jsx)(r.h2,{id:"context-propagation",children:"Context Propagation"}),"\n",(0,o.jsx)(r.p,{children:"Configure custom context propagation:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"const propagator = new CompositePropagator({\n  propagators: [\n    new W3CTraceContextPropagator(),\n    new B3Propagator(),\n    new JaegerPropagator(),\n  ],\n});\n\npropagation.setGlobalPropagator(propagator);\n"})}),"\n",(0,o.jsx)(r.h2,{id:"custom-metrics",children:"Custom Metrics"}),"\n",(0,o.jsx)(r.p,{children:"Define and record custom metrics:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"const meter = metrics.getMeter('my-custom-metrics');\n\nconst requestCounter = meter.createCounter('requests', {\n  description: 'Count of requests',\n});\n\nconst requestDuration = meter.createHistogram('request_duration', {\n  description: 'Duration of requests',\n  unit: 'ms',\n});\n"})}),"\n",(0,o.jsx)(r.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,o.jsx)(r.p,{children:"Configure error handling for exporters:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"exporter.on('error', (error) => {\n  console.error('Exporter error:', error);\n  // Custom error handling logic\n});\n"})}),"\n",(0,o.jsxs)(r.p,{children:["For more information about exporters, see the ",(0,o.jsx)(r.a,{href:"./exporters",children:"Exporters"})," guide."]})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>i});var t=n(6540);const o={},a=t.createContext(o);function s(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);