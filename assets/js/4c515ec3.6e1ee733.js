"use strict";(self.webpackChunk_clean_stack_source=self.webpackChunk_clean_stack_source||[]).push([[3842],{922:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"getting-started/project-structure","title":"Project Structure","description":"A detailed guide to Clean Stack\'s monorepo structure and organization.","source":"@site/docs/getting-started/project-structure.md","sourceDirName":"getting-started","slug":"/getting-started/project-structure","permalink":"/docs/getting-started/project-structure","draft":false,"unlisted":false,"editUrl":"https://github.com/ersanyamarya/clean-stack/tree/main/apps/clean-docs/docs/getting-started/project-structure.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Installation Guide","permalink":"/docs/getting-started/installation"},"next":{"title":"Architecture","permalink":"/docs/category/architecture"}}');var r=i(4848),t=i(8453);const o={sidebar_position:3},c="Project Structure",l={},d=[{value:"Main Structure",id:"main-structure",level:2},{value:"Key Components Explained",id:"key-components-explained",level:2},{value:"Apps (<code>apps/</code>)",id:"apps-apps",level:3},{value:"Domain (<code>domain/</code>)",id:"domain-domain",level:3},{value:"Framework (<code>framework/</code>)",id:"framework-framework",level:3},{value:"Platform Features (<code>platform-features/</code>)",id:"platform-features-platform-features",level:3},{value:"Services (<code>services/</code>)",id:"services-services",level:3},{value:"Configuration Files",id:"configuration-files",level:2},{value:"Root Level",id:"root-level",level:3},{value:"Project Level",id:"project-level",level:3},{value:"Development Guidelines",id:"development-guidelines",level:2},{value:"Adding New Code",id:"adding-new-code",level:3},{value:"File Organization",id:"file-organization",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"project-structure",children:"Project Structure"})}),"\n",(0,r.jsx)(n.p,{children:"A detailed guide to Clean Stack's monorepo structure and organization."}),"\n",(0,r.jsx)(n.h2,{id:"main-structure",children:"Main Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"clean-stack/\n\u251c\u2500\u2500 apps/                  # Frontend applications\n\u2502   \u251c\u2500\u2500 clean-docs/       # Documentation site\n\u2502   \u251c\u2500\u2500 web-ui/          # Web application\n\u2502   \u2514\u2500\u2500 web-ui-e2e/      # E2E tests\n\u251c\u2500\u2500 domain/               # Core business domain\n\u2502   \u251c\u2500\u2500 custom-errors/    # Error definitions\n\u2502   \u251c\u2500\u2500 domain_user/     # User domain\n\u2502   \u2514\u2500\u2500 grpc-proto/      # Protocol definitions\n\u251c\u2500\u2500 framework/            # Technical foundation\n\u2502   \u251c\u2500\u2500 global-types/    # Shared types\n\u2502   \u251c\u2500\u2500 grpc-essentials/ # gRPC utilities\n\u2502   \u2514\u2500\u2500 utilities/       # Common utilities\n\u251c\u2500\u2500 platform-features/    # Cross-cutting concerns\n\u2502   \u251c\u2500\u2500 backend-telemetry/\n\u2502   \u251c\u2500\u2500 cache/\n\u2502   \u2514\u2500\u2500 rate-limiter/\n\u251c\u2500\u2500 services/            # Backend services\n\u2502   \u251c\u2500\u2500 main-service/\n\u2502   \u251c\u2500\u2500 user-service/\n\u2502   \u2514\u2500\u2500 llm-service/\n\u2514\u2500\u2500 tools/               # Development tools\n"})}),"\n",(0,r.jsx)(n.h2,{id:"key-components-explained",children:"Key Components Explained"}),"\n",(0,r.jsxs)(n.h3,{id:"apps-apps",children:["Apps (",(0,r.jsx)(n.code,{children:"apps/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Each application is an NX project with its own:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Configuration (",(0,r.jsx)(n.code,{children:"project.json"}),", ",(0,r.jsx)(n.code,{children:"tsconfig.json"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Build setup (Vite/other bundler config)"}),"\n",(0,r.jsx)(n.li,{children:"Unit and E2E tests"}),"\n",(0,r.jsx)(n.li,{children:"Environment files"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"domain-domain",children:["Domain (",(0,r.jsx)(n.code,{children:"domain/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Contains pure business logic:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"domain/domain_user/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 lib/              # Core implementation\n\u2502   \u2502   \u251c\u2500\u2500 entities/     # Domain entities\n\u2502   \u2502   \u251c\u2500\u2500 usecases/    # Business logic\n\u2502   \u2502   \u2514\u2500\u2500 repositories/ # Data contracts\n\u2502   \u251c\u2500\u2500 tests/           # Unit tests\n\u2502   \u2514\u2500\u2500 index.ts         # Public API\n\u251c\u2500\u2500 project.json         # NX configuration\n\u2514\u2500\u2500 tsconfig.json       # TypeScript setup\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"framework-framework",children:["Framework (",(0,r.jsx)(n.code,{children:"framework/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Technical components that support the domain:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"global-types"}),": Shared TypeScript definitions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"grpc-essentials"}),": Base gRPC configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"koa-server-essentials"}),": HTTP server setup"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"utilities"}),": Shared helper functions"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"platform-features-platform-features",children:["Platform Features (",(0,r.jsx)(n.code,{children:"platform-features/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Cross-cutting functionality:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"backend-telemetry"}),": OpenTelemetry integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cache"}),": Redis-based caching"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"rate-limiter"}),": Request throttling"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"services-services",children:["Services (",(0,r.jsx)(n.code,{children:"services/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Each service follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"services/user-service/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 controllers/     # Request handlers\n\u2502   \u251c\u2500\u2500 middleware/     # Custom middleware\n\u2502   \u251c\u2500\u2500 routes/         # API routes\n\u2502   \u2514\u2500\u2500 index.ts       # Service entry\n\u251c\u2500\u2500 Dockerfile         # Container config\n\u2514\u2500\u2500 project.json      # NX configuration\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,r.jsx)(n.h3,{id:"root-level",children:"Root Level"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nx.json"}),": NX workspace configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"package.json"}),": Monorepo dependencies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tsconfig.base.json"}),": Base TypeScript config"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"eslint.config.js"}),": Linting rules"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".prettierrc.js"}),": Code formatting"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"project-level",children:"Project Level"}),"\n",(0,r.jsx)(n.p,{children:"Each project has:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"project.json"}),": NX project settings"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tsconfig.json"}),": Project-specific TS config"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"vite.config.ts"}),": Build configuration (if applicable)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"development-guidelines",children:"Development Guidelines"}),"\n",(0,r.jsx)(n.h3,{id:"adding-new-code",children:"Adding New Code"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Libraries"}),": Add to appropriate ",(0,r.jsx)(n.code,{children:"domain/"})," or ",(0,r.jsx)(n.code,{children:"framework/"})," directory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Features"}),": Add to ",(0,r.jsx)(n.code,{children:"platform-features/"})," if cross-cutting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Services"}),": Create new service in ",(0,r.jsx)(n.code,{children:"services/"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"UI"}),": Add to ",(0,r.jsx)(n.code,{children:"apps/web-ui/"})," or create new app"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"file-organization",children:"File Organization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep related code together"}),"\n",(0,r.jsx)(n.li,{children:"One feature per directory"}),"\n",(0,r.jsxs)(n.li,{children:["Consistent naming:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"*.spec.ts"})," for tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"index.ts"})," for public API"]}),"\n",(0,r.jsx)(n.li,{children:"kebab-case for files"}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);