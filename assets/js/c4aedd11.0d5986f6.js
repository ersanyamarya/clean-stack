"use strict";(self.webpackChunk_clean_stack_source=self.webpackChunk_clean_stack_source||[]).push([[4758],{1948:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"platform-features/observability/index","title":"Introduction to Observability","description":"Observability is a measure of how well we can understand a system\'s internal states from its external outputs. In the context of software systems, it\'s about gaining insights into the behavior, performance, and health of applications and infrastructure.","source":"@site/docs/platform-features/observability/index.md","sourceDirName":"platform-features/observability","slug":"/platform-features/observability/","permalink":"/docs/platform-features/observability/","draft":false,"unlisted":false,"editUrl":"https://github.com/ersanyamarya/clean-stack/tree/main/apps/clean-docs/docs/platform-features/observability/index.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Observability"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/docs/platform-features/"},"next":{"title":"Understanding OpenTelemetry","permalink":"/docs/platform-features/observability/what-is-otel"}}');var r=s(4848),i=s(8453);const a={sidebar_label:"Observability"},o="Introduction to Observability",l={},c=[];function d(e){const t={h1:"h1",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"introduction-to-observability",children:"Introduction to Observability"})}),"\n",(0,r.jsx)(t.p,{children:"Observability is a measure of how well we can understand a system's internal states from its external outputs. In the context of software systems, it's about gaining insights into the behavior, performance, and health of applications and infrastructure."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Key Pillars of Observability"})}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Logs"}),": Timestamped records of discrete events in the system."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Metrics"}),": Quantitative measurements collected over time."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Traces"}),": Detailed records of requests as they flow through a distributed system."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Why is Observability Important?"})}),"\n",(0,r.jsx)(t.p,{children:"Observability is crucial in modern software development and operations for several reasons:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Proactive Problem Detection"}),": It allows teams to identify issues before they impact users."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Faster Troubleshooting"}),": With comprehensive data, teams can quickly pinpoint the root cause of problems."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Performance Optimization"}),": Observability data helps in identifying bottlenecks and areas for improvement."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Better User Experience"}),": By understanding system behavior, teams can make informed decisions to enhance user satisfaction."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Informed Decision Making"}),": Data-driven insights support better strategic and technical decisions."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>o});var n=s(6540);const r={},i=n.createContext(r);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);