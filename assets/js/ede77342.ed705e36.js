"use strict";(self.webpackChunk_clean_stack_source=self.webpackChunk_clean_stack_source||[]).push([[1788],{8262:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"platform-features/telemetry","title":"Telemetry Implementation","description":"Backend Telemetry","source":"@site/docs/platform-features/telemetry.md","sourceDirName":"platform-features","slug":"/platform-features/telemetry","permalink":"/docs/platform-features/telemetry","draft":false,"unlisted":false,"editUrl":"https://github.com/ersanyamarya/clean-stack/tree/main/apps/clean-docs/docs/platform-features/telemetry.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Infrastructure Setup","permalink":"/docs/platform-features/infrastructure"},"next":{"title":"Framework","permalink":"/docs/category/framework"}}');var i=r(4848),l=r(8453);const s={sidebar_position:3},c="Telemetry Implementation",a={},o=[{value:"Backend Telemetry",id:"backend-telemetry",level:2},{value:"Core Features",id:"core-features",level:3},{value:"Architecture",id:"architecture",level:3},{value:"Usage Example",id:"usage-example",level:3},{value:"Frontend Telemetry",id:"frontend-telemetry",level:2},{value:"Core Features",id:"core-features-1",level:3},{value:"Usage Example",id:"usage-example-1",level:3},{value:"Available Metrics",id:"available-metrics",level:2},{value:"Backend Metrics",id:"backend-metrics",level:3},{value:"Frontend Metrics",id:"frontend-metrics",level:3},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"telemetry-implementation",children:"Telemetry Implementation"})}),"\n",(0,i.jsx)(n.h2,{id:"backend-telemetry",children:"Backend Telemetry"}),"\n",(0,i.jsxs)(n.p,{children:["Located in ",(0,i.jsx)(n.code,{children:"platform-features/backend-telemetry"}),", provides comprehensive observability for services:"]}),"\n",(0,i.jsx)(n.h3,{id:"core-features",children:"Core Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OpenTelemetry integration"}),"\n",(0,i.jsx)(n.li,{children:"Automatic Node.js instrumentation"}),"\n",(0,i.jsx)(n.li,{children:"Unified logging with Pino"}),"\n",(0,i.jsx)(n.li,{children:"Trace context propagation"}),"\n",(0,i.jsx)(n.li,{children:"Metric collection"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(n.mermaid,{value:"graph LR\n    A[Service] --\x3e|Instrumented with| B[Backend Telemetry]\n    B --\x3e|Traces| C[OpenTelemetry Collector]\n    B --\x3e|Metrics| C\n    B --\x3e|Logs| C\n    C --\x3e|Export| D[Tempo]\n    C --\x3e|Export| E[Prometheus]\n    C --\x3e|Export| F[Loki]\n    D --\x3e G[Grafana]\n    E --\x3e G\n    F --\x3e G"}),"\n",(0,i.jsx)(n.h3,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { initTelemetry } from '@clean-stack/platform-features/backend-telemetry';\n\nconst { telemetrySdk, mainLogger } = initTelemetry({\n  serviceName: 'user-service',\n  serviceVersion: '1.0.0',\n  collectorUrl: 'http://localhost:4317'\n});\n\n// Use logger for consistent logging\nmainLogger.info('Server starting');\n\n// Graceful shutdown\nprocess.on('SIGTERM', async () => {\n  mainLogger.info('Shutting down');\n  await telemetrySdk.shutdown();\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"frontend-telemetry",children:"Frontend Telemetry"}),"\n",(0,i.jsxs)(n.p,{children:["Located in ",(0,i.jsx)(n.code,{children:"frontend-libs/frontend-telemetry"}),", provides browser-side observability:"]}),"\n",(0,i.jsx)(n.h3,{id:"core-features-1",children:"Core Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Web Vitals monitoring"}),"\n",(0,i.jsx)(n.li,{children:"Browser trace collection"}),"\n",(0,i.jsx)(n.li,{children:"User interaction tracking"}),"\n",(0,i.jsx)(n.li,{children:"Error tracking"}),"\n",(0,i.jsx)(n.li,{children:"Performance metrics"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"usage-example-1",children:"Usage Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { initTelemetry } from '@clean-stack/frontend-telemetry';\n\ninitTelemetry({\n  serviceName: 'web-ui',\n  collectorUrl: 'http://localhost:4318/v1/traces'\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"available-metrics",children:"Available Metrics"}),"\n",(0,i.jsx)(n.h3,{id:"backend-metrics",children:"Backend Metrics"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"HTTP request latency"}),"\n",(0,i.jsx)(n.li,{children:"gRPC method calls"}),"\n",(0,i.jsx)(n.li,{children:"Cache hit/miss ratios"}),"\n",(0,i.jsx)(n.li,{children:"Rate limiter statistics"}),"\n",(0,i.jsx)(n.li,{children:"Custom business metrics"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"frontend-metrics",children:"Frontend Metrics"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Page load timing"}),"\n",(0,i.jsx)(n.li,{children:"First Contentful Paint (FCP)"}),"\n",(0,i.jsx)(n.li,{children:"Largest Contentful Paint (LCP)"}),"\n",(0,i.jsx)(n.li,{children:"First Input Delay (FID)"}),"\n",(0,i.jsx)(n.li,{children:"Custom user interactions"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Early Initialization"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Initialize telemetry at service startup"}),"\n",(0,i.jsx)(n.li,{children:"Configure before other components"}),"\n",(0,i.jsx)(n.li,{children:"Handle shutdown gracefully"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Context Propagation"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pass trace context in service calls"}),"\n",(0,i.jsx)(n.li,{children:"Maintain correlation IDs"}),"\n",(0,i.jsx)(n.li,{children:"Link related operations"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Structured Logging"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use consistent log levels"}),"\n",(0,i.jsx)(n.li,{children:"Include relevant context"}),"\n",(0,i.jsx)(n.li,{children:"Follow log format standards"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Performance Impact"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use sampling for high-traffic services"}),"\n",(0,i.jsx)(n.li,{children:"Configure appropriate batch sizes"}),"\n",(0,i.jsx)(n.li,{children:"Monitor telemetry overhead"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var t=r(6540);const i={},l=t.createContext(i);function s(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);