"use strict";(self.webpackChunk_clean_stack_source=self.webpackChunk_clean_stack_source||[]).push([[9449],{2934:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"architecture/philosophy","title":"Architecture Philosophy","description":"Vision","source":"@site/docs/architecture/philosophy.md","sourceDirName":"architecture","slug":"/architecture/philosophy","permalink":"/docs/architecture/philosophy","draft":false,"unlisted":false,"editUrl":"https://github.com/ersanyamarya/clean-stack/tree/main/apps/clean-docs/docs/architecture/philosophy.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/docs/category/architecture"},"next":{"title":"Overview","permalink":"/docs/platform-features/"}}');var s=i(4848),t=i(8453);const l={sidebar_position:1},o="Architecture Philosophy",c={},d=[{value:"Vision",id:"vision",level:2},{value:"Core Principles",id:"core-principles",level:2},{value:"1. Developer Experience First",id:"1-developer-experience-first",level:3},{value:"2. Domain-Driven Design",id:"2-domain-driven-design",level:3},{value:"3. Clean Architecture",id:"3-clean-architecture",level:3},{value:"4. Microservices Done Right",id:"4-microservices-done-right",level:3},{value:"5. Observable by Default",id:"5-observable-by-default",level:3},{value:"6. Production Ready",id:"6-production-ready",level:3},{value:"Implementation Philosophy",id:"implementation-philosophy",level:2},{value:"Technology Choices",id:"technology-choices",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Testing Strategy",id:"testing-strategy",level:3},{value:"Evolution and Maintenance",id:"evolution-and-maintenance",level:2},{value:"Continuous Improvement",id:"continuous-improvement",level:3},{value:"Future Focus Areas",id:"future-focus-areas",level:3}];function a(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"architecture-philosophy",children:"Architecture Philosophy"})}),"\n",(0,s.jsx)(n.h2,{id:"vision",children:"Vision"}),"\n",(0,s.jsx)(n.p,{children:"Clean Stack emerges from real-world challenges in modern software development. Our vision is to provide a robust foundation that eliminates common technical hurdles while maintaining flexibility for diverse business needs."}),"\n",(0,s.jsx)(n.h2,{id:"core-principles",children:"Core Principles"}),"\n",(0,s.jsx)(n.h3,{id:"1-developer-experience-first",children:"1. Developer Experience First"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Productivity Focus"}),": Tools and patterns chosen to maximize developer efficiency"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type Safety"}),": End-to-end TypeScript for better code reliability"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clear Conventions"}),": Standardized practices to reduce decision fatigue"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Great Documentation"}),": Comprehensive guides and API documentation"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-domain-driven-design",children:"2. Domain-Driven Design"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clear Boundaries"}),": Business logic isolated in domain layer"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pure Core"}),": Domain logic free from technical concerns"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Shared Understanding"}),": Common language between technical and business teams"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Flexible Evolution"}),": Easy adaptation to changing business needs"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-clean-architecture",children:"3. Clean Architecture"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph TD\n    A[UI Layer] --\x3e B[Use Cases]\n    B --\x3e C[Domain Layer]\n    B --\x3e D[Infrastructure]\n    D --\x3e E[External Systems]\n    \n    style C fill:#f9f,stroke:#333,stroke-width:2px\n    style B fill:#bbf,stroke:#333,stroke-width:2px"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Independent Core"}),": Business logic independent of frameworks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dependency Inversion"}),": External concerns depend on core, not vice versa"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clear Interfaces"}),": Well-defined boundaries between layers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testable Design"}),": Easy to test each layer in isolation"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"4-microservices-done-right",children:"4. Microservices Done Right"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph LR\n    A[API Gateway] --\x3e B[gRPC Services]\n    B --\x3e C[Domain Logic]\n    B --\x3e D[Shared Infrastructure]\n    \n    style B fill:#bbf,stroke:#333,stroke-width:2px"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Smart Endpoints"}),": Services contain business logic"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dumb Pipes"}),": Simple, reliable communication via gRPC"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Independent Deployment"}),": Services can be deployed independently"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Resilient Design"}),": Fault isolation and graceful degradation"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"5-observable-by-default",children:"5. Observable by Default"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Distributed Tracing"}),": Track requests across services"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Metrics Collection"}),": Monitor system health and performance"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Structured Logging"}),": Consistent logging across services"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance Insights"}),": Built-in tools for performance analysis"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"6-production-ready",children:"6. Production Ready"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Security First"}),": Built-in security best practices"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scalable Architecture"}),": Designed for horizontal scaling"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance Optimized"}),": Efficient resource usage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Maintainable Code"}),": Clear structure and conventions"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"implementation-philosophy",children:"Implementation Philosophy"}),"\n",(0,s.jsx)(n.h3,{id:"technology-choices",children:"Technology Choices"}),"\n",(0,s.jsx)(n.p,{children:"Each technology is chosen with clear purpose:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Choice"}),(0,s.jsx)(n.th,{children:"Rationale"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Bun"}),(0,s.jsx)(n.td,{children:"Modern, fast, compatible package management"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Koa"}),(0,s.jsx)(n.td,{children:"Lightweight, modern HTTP server framework"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"gRPC"}),(0,s.jsx)(n.td,{children:"Efficient, type-safe service communication"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"OpenTelemetry"}),(0,s.jsx)(n.td,{children:"Industry standard observability"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"NX"}),(0,s.jsx)(n.td,{children:"Powerful monorepo management"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Custom Error Types"}),": Domain-specific error handling"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consistent Patterns"}),": Standard error handling across services"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clear Communication"}),": User-friendly error messages"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Proper Logging"}),": Error tracking and debugging support"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"testing-strategy",children:"Testing Strategy"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Unit Testing"}),": Core business logic"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Integration Testing"}),": Service interactions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"E2E Testing"}),": Critical user paths"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance Testing"}),": Load and stress tests"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"evolution-and-maintenance",children:"Evolution and Maintenance"}),"\n",(0,s.jsx)(n.h3,{id:"continuous-improvement",children:"Continuous Improvement"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Regular dependency updates"}),"\n",(0,s.jsx)(n.li,{children:"Performance monitoring and optimization"}),"\n",(0,s.jsx)(n.li,{children:"Security audits and updates"}),"\n",(0,s.jsx)(n.li,{children:"Community feedback integration"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"future-focus-areas",children:"Future Focus Areas"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"AI Integration"}),": Tools for AI-driven applications"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Edge Computing"}),": Support for edge deployment"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Developer Tooling"}),": Enhanced development experience"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Security Features"}),": Advanced security capabilities"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This philosophy guide serves as our north star, ensuring all development aligns with our core principles and vision."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);