receivers:
  otlp:
    protocols:
      grpc:
        endpoint: '0.0.0.0:4317'
      http:
        endpoint: '0.0.0.0:4318'
        cors:
          allowed_origins:
            - '*'
          allowed_headers:
            - '*'

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
  resource:
    attributes:
      - key: environment
        value: development
        action: upsert
  memory_limiter:
    check_interval: 1s
    limit_mib: 1024
  attributes:
    actions:
      - key: http.target
        action: delete
      - key: http.route
        action: delete
  resourcedetection:
    # Enriches telemetry data with resource information from the host
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/resourcedetectionprocessor
    detectors: ['env', 'system']
    override: false
  transform/drop_unneeded_resource_attributes:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/transformprocessor
    error_mode: ignore
    trace_statements:
      - context: resource
        statements:
          - delete_key(attributes, "k8s.pod.start_time")
          - delete_key(attributes, "os.description")
          - delete_key(attributes, "os.type")
          - delete_key(attributes, "process.command_args")
          - delete_key(attributes, "process.executable.path")
          - delete_key(attributes, "process.pid")
          - delete_key(attributes, "process.runtime.description")
          - delete_key(attributes, "process.runtime.name")
          - delete_key(attributes, "process.runtime.version")
          - delete_key(attributes, "telemetry.sdk.language")
          - delete_key(attributes, "telemetry.sdk.name")
          - delete_key(attributes, "telemetry.sdk.version")
    metric_statements:
      - context: resource
        statements:
          - delete_key(attributes, "k8s.pod.start_time")
          - delete_key(attributes, "os.description")
          - delete_key(attributes, "os.type")
          - delete_key(attributes, "process.command_args")
          - delete_key(attributes, "process.executable.path")
          - delete_key(attributes, "process.pid")
          - delete_key(attributes, "process.runtime.description")
          - delete_key(attributes, "process.runtime.name")
          - delete_key(attributes, "process.runtime.version")
          - delete_key(attributes, "telemetry.sdk.language")
          - delete_key(attributes, "telemetry.sdk.name")
          - delete_key(attributes, "telemetry.sdk.version")
    log_statements:
      - context: resource
        statements:
          - delete_key(attributes, "k8s.pod.start_time")
          - delete_key(attributes, "os.description")
          - delete_key(attributes, "os.type")
          - delete_key(attributes, "process.command_args")
          - delete_key(attributes, "process.executable.path")
          - delete_key(attributes, "process.pid")
          - delete_key(attributes, "process.runtime.description")
          - delete_key(attributes, "process.runtime.name")
          - delete_key(attributes, "process.runtime.version")
          - delete_key(attributes, "telemetry.sdk.language")
          - delete_key(attributes, "telemetry.sdk.name")
          - delete_key(attributes, "telemetry.sdk.version")

exporters:
  debug:
    verbosity: detailed
  prometheus:
    endpoint: '0.0.0.0:9090' # Changed to listen on all interfaces
    # tls:
    #   insecure: true
  loki:
    endpoint: 'http://loki:3100/loki/api/v1/push'
    tls:
      insecure: true
    sending_queue:
      enabled: true
      num_consumers: 1
      queue_size: 100
    retry_on_failure:
      enabled: true
      initial_interval: 1s
      max_interval: 30s
      max_elapsed_time: 120s
  otlp:
    endpoint: 'tempo:4317'
    tls:
      insecure: true

extensions:
  health_check:
  pprof:
  zpages:

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [resourcedetection, transform/drop_unneeded_resource_attributes, batch, attributes]
      exporters: [otlp, debug]
    metrics:
      receivers: [otlp]
      processors: [resourcedetection, transform/drop_unneeded_resource_attributes, batch, attributes]
      exporters: [prometheus, debug]
    logs:
      receivers: [otlp]
      processors: [resourcedetection, transform/drop_unneeded_resource_attributes, batch, attributes]
      exporters: [loki, debug]

  telemetry:
    logs:
      level: debug
